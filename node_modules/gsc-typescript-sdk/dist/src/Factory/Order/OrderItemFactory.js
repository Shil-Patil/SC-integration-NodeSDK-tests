"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrderItemFactory = void 0;
var DateUtils_1 = require("../../Helpers/DateUtils");
var OrderItem_1 = require("../../Model/Order/OrderItem");
var JsonStructureValidator_1 = require("../../Validator/JsonStructureValidator");
var OrderItemFactory = /** @class */ (function () {
    function OrderItemFactory() {
    }
    OrderItemFactory.make = function (element) {
        JsonStructureValidator_1.JsonStructureValidator.validateStructure(element, "OrderItem", OrderItemFactory.REQUIRED_FIELDS);
        var isProcessable = element["IsProcessable"];
        var isDigital = element["IsDigital"];
        var dateTimePromisedShippingTime = (0, DateUtils_1.getDateAndTime)(new Date(element["PromisedShippingTime"]));
        var promisedShippingTime = dateTimePromisedShippingTime ? dateTimePromisedShippingTime : null;
        var extraAttributes = element["ExtraAttributes"];
        var dateTimeCreatedAt = (0, DateUtils_1.getDateAndTime)(new Date(element["CreatedAt"]));
        var createdAt = dateTimeCreatedAt ? dateTimeCreatedAt : null;
        var dateTimeUpdatedAt = (0, DateUtils_1.getDateAndTime)(new Date(element["UpdatedAt"]));
        var updatedAt = dateTimeUpdatedAt ? dateTimeUpdatedAt : null;
        return OrderItem_1.OrderItem.fromOrderItem(element["OrderItemId"], element["ShopId"], element["OrderId"], element["Name"], element["Sku"], element["Variation"], element["ShopSku"], element["ShippingType"], element["ItemPrice"], element["PaidPrice"], element["Currency"], element["WalletCredits"], element["TaxAmount"], element["ShippingAmount"], element["ShippingServiceCost"], element["VoucherAmount"], element["Status"], isProcessable, element["ShipmentProvider"], isDigital, element["ShippingProviderType"], element["TrackingCodePre"], element["Reason"], element["ReasonDetail"], element["PurchaseOrderId"], element["PurchaseOrderNumber"], element["PackageId"], new Date(promisedShippingTime), extraAttributes, element["DigitalDeliveryInfo"], element["CodCollectableAmount"], element["TrackingCode"], element["VoucherCode"], new Date(createdAt), new Date(updatedAt), element["ReturnStatus"], element["SalesType"]);
    };
    OrderItemFactory.makeFromStatus = function (element) {
        JsonStructureValidator_1.JsonStructureValidator.validateStructure(element, "OrderItem", OrderItemFactory.REQUIRED_FIELDS_FROM_STATUS);
        var orderItemId = element["OrderItemId"];
        var packageId = element["PackageId"] ? element["PackageId"] : null;
        return OrderItem_1.OrderItem.fromStatus(orderItemId, element["PurchaseOrderId"], element["PurchaseOrderNumber"], packageId);
    };
    OrderItemFactory.XML_MODEL = 'OrderItem';
    OrderItemFactory.REQUIRED_FIELDS = [
        'OrderItemId',
        'ShopId',
        'OrderId',
        'Name',
        'Sku',
        'Variation',
        'ShopSku',
        'ShippingType',
        'ItemPrice',
        'PaidPrice',
        'Currency',
        'WalletCredits',
        'TaxAmount',
        'CodCollectableAmount',
        'ShippingAmount',
        'ShippingServiceCost',
        'VoucherAmount',
        'VoucherCode',
        'Status',
        'IsProcessable',
        'ShipmentProvider',
        'IsDigital',
        'DigitalDeliveryInfo',
        'TrackingCode',
        'TrackingCodePre',
        'Reason',
        'ReasonDetail',
        'PurchaseOrderId',
        'PurchaseOrderNumber',
        'PackageId',
        'PromisedShippingTime',
        'ExtraAttributes',
        'ShippingProviderType',
        'CreatedAt',
        'UpdatedAt',
        'ReturnStatus',
    ];
    OrderItemFactory.REQUIRED_FIELDS_FROM_STATUS = [
        'PurchaseOrderId',
        'PurchaseOrderNumber',
    ];
    return OrderItemFactory;
}());
exports.OrderItemFactory = OrderItemFactory;
//# sourceMappingURL=OrderItemFactory.js.map