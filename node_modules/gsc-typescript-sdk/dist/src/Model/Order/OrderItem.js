"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrderItem = void 0;
var OrderItem = /** @class */ (function () {
    function OrderItem() {
    }
    OrderItem.fromOrderItem = function (orderItemId, shopId, orderId, name, sku, variation, shopSku, shippingType, itemPrice, paidPrice, currency, walletCredits, taxAmount, shippingAmount, shippingServiceCost, voucherAmount, status, isProcessable, shipmentProvider, isDigital, shippingProviderType, trackingCodePre, reason, reasonDetail, purchaseOrderId, purchaseOrderNumber, packageId, promisedShippingTime, extraAttributes, digitalDeliveryInfo, codCollectableAmount, trackingCode, voucherCode, createdAt, updatedAt, returnStatus, salesType) {
        var orderItem = new OrderItem();
        orderItem.orderItemId = orderItemId;
        orderItem.shopId = shopId;
        orderItem.orderId = orderId;
        orderItem.name = name;
        orderItem.sku = sku;
        orderItem.variation = variation;
        orderItem.shopSku = shopSku;
        orderItem.shippingType = shippingType;
        orderItem.itemPrice = itemPrice;
        orderItem.paidPrice = paidPrice;
        orderItem.currency = currency;
        orderItem.walletCredits = walletCredits;
        orderItem.taxAmount = taxAmount;
        orderItem.codCollectableAmount = codCollectableAmount;
        orderItem.shippingAmount = shippingAmount;
        orderItem.shippingServiceCost = shippingServiceCost;
        orderItem.voucherAmount = voucherAmount;
        orderItem.voucherCode = voucherCode;
        orderItem.status = status;
        orderItem.isProcessable = isProcessable;
        orderItem.shipmentProvider = shipmentProvider;
        orderItem.isDigital = isDigital;
        orderItem.digitalDeliveryInfo = digitalDeliveryInfo;
        orderItem.trackingCode = trackingCode;
        orderItem.trackingCodePre = trackingCodePre;
        orderItem.reason = reason;
        orderItem.reasonDetail = reasonDetail;
        orderItem.purchaseOrderId = purchaseOrderId;
        orderItem.purchaseOrderNumber = purchaseOrderNumber;
        orderItem.packageId = packageId;
        orderItem.promisedShippingTime = promisedShippingTime;
        orderItem.extraAttributes = extraAttributes;
        orderItem.shippingProviderType = shippingProviderType;
        orderItem.createdAt = createdAt;
        orderItem.updatedAt = updatedAt;
        orderItem.returnStatus = returnStatus;
        orderItem.salesType = salesType;
        return orderItem;
    };
    OrderItem.fromStatus = function (orderItemId, purchaseOrderId, purchaseOrderNumber, packageId) {
        var orderItem = new OrderItem();
        orderItem.purchaseOrderId = purchaseOrderId;
        orderItem.purchaseOrderNumber = purchaseOrderNumber;
        orderItem.orderItemId = orderItemId;
        orderItem.packageId = packageId;
        return orderItem;
    };
    OrderItem.prototype.getOrderItemId = function () {
        return this.orderItemId;
    };
    OrderItem.prototype.getShopId = function () {
        return this.shopId;
    };
    OrderItem.prototype.getOrderId = function () {
        return this.orderId;
    };
    OrderItem.prototype.getName = function () {
        return this.name;
    };
    OrderItem.prototype.getSku = function () {
        return this.sku;
    };
    OrderItem.prototype.getVariation = function () {
        return this.variation;
    };
    OrderItem.prototype.getShopSku = function () {
        return this.shopSku;
    };
    OrderItem.prototype.getShippingType = function () {
        return this.shippingType;
    };
    OrderItem.prototype.getItemPrice = function () {
        return this.itemPrice;
    };
    OrderItem.prototype.getPaidPrice = function () {
        return this.paidPrice;
    };
    OrderItem.prototype.getCurrency = function () {
        return this.currency;
    };
    OrderItem.prototype.getWalletCredits = function () {
        return this.walletCredits;
    };
    OrderItem.prototype.getTaxAmount = function () {
        return this.taxAmount;
    };
    OrderItem.prototype.getCodCollectableAmount = function () {
        return this.codCollectableAmount;
    };
    OrderItem.prototype.getShippingAmount = function () {
        return this.shippingAmount;
    };
    OrderItem.prototype.getShippingServiceCost = function () {
        return this.shippingServiceCost;
    };
    OrderItem.prototype.getVoucherAmount = function () {
        return this.voucherAmount;
    };
    OrderItem.prototype.getVoucherCode = function () {
        return this.voucherCode;
    };
    OrderItem.prototype.getStatus = function () {
        return this.status;
    };
    OrderItem.prototype.getIsProcessable = function () {
        return this.isProcessable;
    };
    OrderItem.prototype.getShipmentProvider = function () {
        return this.shipmentProvider;
    };
    OrderItem.prototype.getIsDigital = function () {
        return this.isDigital;
    };
    OrderItem.prototype.getDigitalDeliveryInfo = function () {
        return this.digitalDeliveryInfo;
    };
    OrderItem.prototype.getTrackingCode = function () {
        return this.trackingCode;
    };
    OrderItem.prototype.getTrackingCodePre = function () {
        return this.trackingCodePre;
    };
    OrderItem.prototype.getReason = function () {
        return this.reason;
    };
    OrderItem.prototype.getReasonDetail = function () {
        return this.reasonDetail;
    };
    OrderItem.prototype.getPurchaseOrderId = function () {
        return this.purchaseOrderId;
    };
    OrderItem.prototype.getPurchaseOrderNumber = function () {
        return this.purchaseOrderNumber;
    };
    OrderItem.prototype.getPackageId = function () {
        return this.packageId;
    };
    OrderItem.prototype.getPromisedShippingTime = function () {
        return this.promisedShippingTime;
    };
    /**
     * @return mixed[]|null
     */
    OrderItem.prototype.getExtraAttributes = function () {
        return this.extraAttributes;
    };
    OrderItem.prototype.getShippingProviderType = function () {
        return this.shippingProviderType;
    };
    OrderItem.prototype.getCreatedAt = function () {
        return this.createdAt;
    };
    OrderItem.prototype.getUpdatedAt = function () {
        return this.updatedAt;
    };
    OrderItem.prototype.getReturnStatus = function () {
        return this.returnStatus;
    };
    OrderItem.prototype.getSalesType = function () {
        return this.salesType;
    };
    return OrderItem;
}());
exports.OrderItem = OrderItem;
//# sourceMappingURL=OrderItem.js.map