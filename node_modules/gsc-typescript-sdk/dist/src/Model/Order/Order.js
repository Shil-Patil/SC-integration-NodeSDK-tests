"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Order = void 0;
var Order = /** @class */ (function () {
    function Order() {
    }
    Order.fromData = function (orderId, orderNumber, customerFirstName, $customerLastName, paymentMethod, remarks, deliveryInfo, price, giftOption, giftMessage, voucherCode, createdAt, updatedAt, addressUpdatedAt, addressBilling, addressShipping, nationalRegistrationNumber, itemsCount, promisedShippingTime, extraAttributes, statuses, operatorCode) {
        if (customerFirstName === void 0) { customerFirstName = null; }
        if ($customerLastName === void 0) { $customerLastName = null; }
        if (giftOption === void 0) { giftOption = null; }
        if (createdAt === void 0) { createdAt = null; }
        if (updatedAt === void 0) { updatedAt = null; }
        if (addressUpdatedAt === void 0) { addressUpdatedAt = null; }
        if (promisedShippingTime === void 0) { promisedShippingTime = null; }
        if (extraAttributes === void 0) { extraAttributes = null; }
        if (operatorCode === void 0) { operatorCode = null; }
        var order = new Order();
        order.orderId = orderId;
        order.orderNumber = orderNumber;
        order.customerFirstName = customerFirstName;
        order.customerLastName = $customerLastName;
        order.paymentMethod = paymentMethod;
        order.remarks = remarks;
        order.deliveryInfo = deliveryInfo;
        order.price = price;
        order.giftOption = giftOption;
        order.giftMessage = giftMessage;
        order.voucherCode = voucherCode;
        order.createdAt = createdAt;
        order.updatedAt = updatedAt;
        order.addressUpdatedAt = addressUpdatedAt;
        order.addressBilling = addressBilling;
        order.addressShipping = addressShipping;
        order.nationalRegistrationNumber = nationalRegistrationNumber;
        order.itemsCount = itemsCount;
        order.promisedShippingTime = promisedShippingTime;
        order.extraAttributes = extraAttributes;
        order.statuses = statuses;
        order.operatorCode = operatorCode;
        return order;
    };
    Order.fromItems = function (orderId, orderNumber, OrderItems) {
        var order = new Order();
        order.orderId = orderId;
        order.orderNumber = orderNumber;
        order.orderItems = OrderItems;
        return order;
    };
    Order.prototype.getOrderId = function () {
        return this.orderId;
    };
    Order.prototype.getCustomerFirstName = function () {
        return this.customerFirstName;
    };
    Order.prototype.getCustomerLastName = function () {
        return this.customerLastName;
    };
    Order.prototype.getOrderNumber = function () {
        return this.orderNumber;
    };
    Order.prototype.getPaymentMethod = function () {
        return this.paymentMethod;
    };
    Order.prototype.getRemarks = function () {
        return this.remarks;
    };
    Order.prototype.getDeliveryInfo = function () {
        return this.deliveryInfo;
    };
    Order.prototype.getPrice = function () {
        return this.price;
    };
    Order.prototype.getGiftOption = function () {
        return this.giftOption;
    };
    Order.prototype.getGiftMessage = function () {
        return this.giftMessage;
    };
    Order.prototype.getVoucherCode = function () {
        return this.voucherCode;
    };
    Order.prototype.getCreatedAt = function () {
        return this.createdAt;
    };
    Order.prototype.getUpdatedAt = function () {
        return this.updatedAt;
    };
    Order.prototype.getAddressUpdatedAt = function () {
        return this.addressUpdatedAt;
    };
    Order.prototype.getAddressBilling = function () {
        return this.addressBilling;
    };
    Order.prototype.getAddressShipping = function () {
        return this.addressShipping;
    };
    Order.prototype.getNationalRegistrationNumber = function () {
        return this.nationalRegistrationNumber;
    };
    Order.prototype.getItemsCount = function () {
        return this.itemsCount;
    };
    Order.prototype.getPromisedShippingTime = function () {
        return this.promisedShippingTime;
    };
    Order.prototype.getExtraAttributes = function () {
        return this.extraAttributes;
    };
    Order.prototype.getStatuses = function () {
        return this.statuses;
    };
    Order.prototype.getOrderItems = function () {
        return this.orderItems;
    };
    Order.prototype.getOperatorCode = function () {
        return this.operatorCode;
    };
    Order.prototype.setOrderItems = function ($orderItems) {
        this.orderItems = $orderItems;
    };
    return Order;
}());
exports.Order = Order;
//# sourceMappingURL=Order.js.map