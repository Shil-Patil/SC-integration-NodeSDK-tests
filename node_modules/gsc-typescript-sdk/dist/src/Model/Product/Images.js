"use strict";
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Images = void 0;
var UrlUtils_1 = require("../../Helpers/UrlUtils");
var Image_1 = require("./Image");
var Images = /** @class */ (function () {
    function Images() {
        this.collection = [];
    }
    Images.prototype.all = function () {
        return this.collection;
    };
    Images.prototype.add = function (image) {
        if (this.collection.length >= Images.MAX_IMAGES_ALLOWED) {
            throw new Error("Only ".concat(Images.MAX_IMAGES_ALLOWED, " are supported into the collection."));
        }
        this.collection.push(image);
    };
    Images.prototype.addMany = function (images) {
        var filtered = images;
        images.forEach(function (image, index) {
            if (!(image instanceof Image_1.Image)) {
                images.splice(index, 1);
            }
        });
        var available = Images.MAX_IMAGES_ALLOWED - this.collection.length;
        var items = filtered.slice(0, available);
        this.collection = __spreadArray(__spreadArray([], this.collection, true), items, true);
    };
    Images.prototype.addManyFromUrls = function (images) {
        var filtered = [];
        images.forEach(function (image) {
            if ((0, UrlUtils_1.isUrl)(image))
                filtered.push(new Image_1.Image(image));
        });
        var available = Images.MAX_IMAGES_ALLOWED - this.collection.length;
        var items = filtered.slice(0, available);
        this.collection = __spreadArray(__spreadArray([], this.collection, true), items, true);
    };
    Images.MAX_IMAGES_ALLOWED = 8;
    return Images;
}());
exports.Images = Images;
//# sourceMappingURL=Images.js.map