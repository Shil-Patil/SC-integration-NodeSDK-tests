"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BusinessUnit = void 0;
var BusinessUnitOperatorCodes_1 = require("../../Contract/BusinessUnitOperatorCodes");
var InvalidDomainException_1 = require("../../Exception/InvalidDomainException");
var DateUtils_1 = require("../../Helpers/DateUtils");
var JsonHelper_1 = require("../../Helpers/JsonHelper");
var BusinessUnit = /** @class */ (function () {
    function BusinessUnit(operatorCode, price, stock, status, isPublished, businessUnit, specialPrice, specialFromDate, specialToDate) {
        this.setOperatorCode(operatorCode);
        this.setPrice(price);
        this.setStock(stock);
        this.setStatus(status);
        this.setBusinessUnit(businessUnit);
        this.setSalePrice(specialPrice);
        this.setSaleStartDate(specialFromDate);
        this.setSaleEndDate(specialToDate);
        this.setIsPublished(isPublished);
    }
    BusinessUnit.prototype.getBusinessUnit = function () {
        return this.businessUnit;
    };
    BusinessUnit.prototype.getOperatorCode = function () {
        return this.operatorCode;
    };
    BusinessUnit.prototype.getPrice = function () {
        return this.price;
    };
    BusinessUnit.prototype.getSalePrice = function () {
        return this.specialPrice;
    };
    BusinessUnit.prototype.getSaleStartDate = function () {
        return this.specialFromDate;
    };
    BusinessUnit.prototype.getSaleStartDateString = function () {
        if (!this.specialFromDate) {
            return null;
        }
        return (0, DateUtils_1.getDateAndTime)(this.specialFromDate);
    };
    BusinessUnit.prototype.getSaleEndDate = function () {
        return this.specialToDate;
    };
    BusinessUnit.prototype.getSaleEndDateString = function () {
        if (!this.specialToDate) {
            return null;
        }
        return (0, DateUtils_1.getDateAndTime)(this.specialToDate);
    };
    BusinessUnit.prototype.getStock = function () {
        return this.stock;
    };
    BusinessUnit.prototype.getAvailable = function () {
        return this.stock;
    };
    BusinessUnit.prototype.getStatus = function () {
        return this.status;
    };
    BusinessUnit.prototype.getIsPublished = function () {
        return this.isPublished;
    };
    BusinessUnit.prototype.getAllAttributes = function () {
        var _a, _b, _c;
        var attributes = {};
        attributes[BusinessUnit.FEED_OPERATOR_CODE] = this.operatorCode;
        attributes[BusinessUnit.FEED_PRICE] = this.price;
        attributes[BusinessUnit.FEED_SPECIAL_PRICE] = (_a = this.specialPrice) !== null && _a !== void 0 ? _a : '';
        attributes[BusinessUnit.FEED_SPECIAL_FROM_DATE] = (_b = this.getSaleStartDateString()) !== null && _b !== void 0 ? _b : '';
        attributes[BusinessUnit.FEED_SPECIAL_TO_DATE] = (_c = this.getSaleEndDateString()) !== null && _c !== void 0 ? _c : '';
        attributes[BusinessUnit.FEED_STOCK] = this.stock;
        attributes[BusinessUnit.FEED_STATUS] = this.status;
        return (0, JsonHelper_1.clone)(attributes);
    };
    BusinessUnit.prototype.setBusinessUnit = function (businessUnit) {
        this.businessUnit = businessUnit;
    };
    BusinessUnit.prototype.setOperatorCode = function (operatorCode) {
        if (!(Object.values(BusinessUnitOperatorCodes_1.OPERATOR_CODES).includes(operatorCode))) {
            throw new InvalidDomainException_1.InvalidDomainException('OperatorCode');
        }
        this.operatorCode = operatorCode;
    };
    BusinessUnit.prototype.setPrice = function (price) {
        if (price < 0) {
            throw new InvalidDomainException_1.InvalidDomainException('Price');
        }
        this.price = price;
    };
    BusinessUnit.prototype.setSalePrice = function (specialPrice) {
        var price = parseFloat(this.price);
        var specialPriceTemp = parseFloat(specialPrice);
        if (specialPriceTemp < 0 || specialPriceTemp > price) {
            throw new InvalidDomainException_1.InvalidDomainException('SpecialPrice');
        }
        this.specialPrice = specialPrice;
    };
    BusinessUnit.prototype.setSaleStartDate = function (specialFromDate) {
        this.specialFromDate = specialFromDate;
    };
    BusinessUnit.prototype.setSaleEndDate = function (specialToDate) {
        this.specialToDate = specialToDate;
    };
    BusinessUnit.prototype.setStock = function (stock) {
        if (stock < 0) {
            throw new InvalidDomainException_1.InvalidDomainException('Stock');
        }
        this.stock = stock;
    };
    BusinessUnit.prototype.setStatus = function (status) {
        this.status = status;
    };
    BusinessUnit.prototype.setIsPublished = function (isPublished) {
        this.isPublished = isPublished;
    };
    BusinessUnit.FEED_BUSINESS_UNIT = 'BusinessUnit';
    BusinessUnit.FEED_OPERATOR_CODE = 'OperatorCode';
    BusinessUnit.FEED_PRICE = 'Price';
    BusinessUnit.FEED_SPECIAL_PRICE = 'SpecialPrice';
    BusinessUnit.FEED_SPECIAL_FROM_DATE = 'SpecialFromDate';
    BusinessUnit.FEED_SPECIAL_TO_DATE = 'SpecialToDate';
    BusinessUnit.FEED_STOCK = 'Stock';
    BusinessUnit.FEED_STATUS = 'Status';
    BusinessUnit.FEED_IS_PUBLISHED = 'IsPublished';
    return BusinessUnit;
}());
exports.BusinessUnit = BusinessUnit;
//# sourceMappingURL=BusinessUnit.js.map