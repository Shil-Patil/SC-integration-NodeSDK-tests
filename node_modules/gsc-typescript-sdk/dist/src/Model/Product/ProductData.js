"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductData = void 0;
var ProductConditionTypes_1 = require("../../Contract/ProductConditionTypes");
var InvalidDomainException_1 = require("../../Exception/InvalidDomainException");
var JsonHelper_1 = require("../../Helpers/JsonHelper");
var ProductData = /** @class */ (function () {
    function ProductData(conditionType, packageHeight, packageWidth, packageLength, packageWeight) {
        this.attributes = (0, JsonHelper_1.clone)({});
        if (conditionType) {
            this.validateConditionType(conditionType);
            this.attributes[ProductData.FEED_CONDITION_TYPE] = conditionType;
        }
        if (packageHeight !== null) {
            this.validatePackageValue(packageHeight, ProductData.FEED_PACKAGE_HEIGHT);
            this.attributes[ProductData.FEED_PACKAGE_HEIGHT] = packageHeight;
        }
        if (packageWidth !== null) {
            this.validatePackageValue(packageWidth, ProductData.FEED_PACKAGE_WIDTH);
            this.attributes[ProductData.FEED_PACKAGE_WIDTH] = packageWidth;
        }
        if (packageLength !== null) {
            this.validatePackageValue(packageLength, ProductData.FEED_PACKAGE_LENGTH);
            this.attributes[ProductData.FEED_PACKAGE_LENGTH] = packageLength;
        }
        if (packageWeight !== null) {
            this.validatePackageValue(packageWeight, ProductData.FEED_PACKAGE_WEIGHT);
            this.attributes[ProductData.FEED_PACKAGE_WEIGHT] = packageWeight;
        }
    }
    ProductData.prototype.all = function () {
        return this.attributes;
    };
    ProductData.prototype.getAttribute = function (attribute) {
        if (this.attributes[attribute]) {
            return this.attributes[attribute];
        }
        return null;
    };
    ProductData.prototype.add = function (name, value) {
        if (!(this.attributes[name])) {
            this.attributes[name] = value;
        }
    };
    ProductData.prototype.validateConditionType = function (conditionType) {
        if (!(Object.values(ProductConditionTypes_1.ProductConditionTypes).includes(conditionType))) {
            throw new InvalidDomainException_1.InvalidDomainException(ProductData.FEED_CONDITION_TYPE);
        }
    };
    ProductData.prototype.validatePackageValue = function (value, feedName) {
        if (value < ProductData.PACKAGE_MIN_VALUE) {
            throw new InvalidDomainException_1.InvalidDomainException(feedName);
        }
    };
    ProductData.FEED_CONDITION_TYPE = 'ConditionType';
    ProductData.FEED_PACKAGE_WEIGHT = 'PackageWeight';
    ProductData.FEED_PACKAGE_HEIGHT = 'PackageHeight';
    ProductData.FEED_PACKAGE_WIDTH = 'PackageWidth';
    ProductData.FEED_PACKAGE_LENGTH = 'PackageLength';
    ProductData.PACKAGE_MIN_VALUE = 0;
    return ProductData;
}());
exports.ProductData = ProductData;
//# sourceMappingURL=ProductData.js.map