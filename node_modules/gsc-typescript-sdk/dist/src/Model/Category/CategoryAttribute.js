"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CategoryAttribute = void 0;
var CategoryAttribute = /** @class */ (function () {
    function CategoryAttribute(name, feedName, label, globalIdentifier, attributeType, options, mandatory, globalAttribute, description, productType, inputType, groupName, maxLength, exampleValue) {
        if (mandatory === void 0) { mandatory = false; }
        if (globalAttribute === void 0) { globalAttribute = false; }
        this.name = name;
        this.feedName = feedName;
        this.label = label;
        this.globalIdentifier = globalIdentifier;
        this.attributeType = attributeType;
        this.options = options;
        this.mandatory = mandatory;
        this.globalAttribute = globalAttribute;
        this.description = description;
        this.productType = productType;
        this.inputType = inputType;
        this.groupName = groupName;
        this.maxLength = maxLength;
        this.exampleValue = exampleValue;
    }
    CategoryAttribute.prototype.getName = function () {
        return this.name;
    };
    CategoryAttribute.prototype.getFeedName = function () {
        return this.feedName;
    };
    CategoryAttribute.prototype.getLabel = function () {
        return this.label;
    };
    CategoryAttribute.prototype.getGlobalIdentifier = function () {
        return this.globalIdentifier;
    };
    CategoryAttribute.prototype.isMandatory = function () {
        return this.mandatory;
    };
    CategoryAttribute.prototype.isGlobalAttribute = function () {
        return this.globalAttribute;
    };
    CategoryAttribute.prototype.getDescription = function () {
        return this.description;
    };
    CategoryAttribute.prototype.getProductType = function () {
        return this.productType;
    };
    CategoryAttribute.prototype.getInputType = function () {
        return this.inputType;
    };
    CategoryAttribute.prototype.getAttributeType = function () {
        return this.attributeType;
    };
    CategoryAttribute.prototype.getExampleValue = function () {
        return this.exampleValue;
    };
    CategoryAttribute.prototype.getOptions = function () {
        return this.options;
    };
    CategoryAttribute.prototype.getGroupName = function () {
        return this.groupName;
    };
    CategoryAttribute.prototype.getMaxLength = function () {
        return this.maxLength;
    };
    return CategoryAttribute;
}());
exports.CategoryAttribute = CategoryAttribute;
//# sourceMappingURL=CategoryAttribute.js.map