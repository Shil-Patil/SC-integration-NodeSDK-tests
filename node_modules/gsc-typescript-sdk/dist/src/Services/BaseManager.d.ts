import { Logger } from 'ts-log';
import { Configuration } from '../Api/Configuration';
import { HttpClient } from "../Api/HttpClient";
import { Actions } from '../Helpers/Actions';
import { HttpMethod } from '../Helpers/HttpMethod';
import { SuccessResponse } from '../Response/SuccessResponse';
import { Parameters } from '../Application/Parameters';
import { AxiosRequestHeaders } from 'axios';
declare class BaseManager {
    protected _configuration: Configuration;
    protected _httpClient: HttpClient;
    protected _parameters: Parameters;
    protected _logger: Logger;
    constructor(_configuration: Configuration, _httpClient: HttpClient, _parameters: Parameters, _logger: Logger);
    makeParametersForAction(action: Actions): Parameters;
    generateRequestId(): string;
    executeAction(action: Actions, parameters: Parameters, requestId: string, httpMethod?: HttpMethod, body?: string, headers?: AxiosRequestHeaders): Promise<SuccessResponse>;
    private buildQuery;
    private logRequest;
    private logRawResponse;
    private logHandledResponse;
    private logError;
}
export { BaseManager };
