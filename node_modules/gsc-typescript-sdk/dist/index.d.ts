import { Configuration } from "./src/Api/Configuration";
import { Parameters } from "./src/Application/Parameters";
import { Logger } from "ts-log";
import { HttpClient } from "./src/Api/HttpClient";
import { FeedManager } from "./src/Services/FeedManager";
import { DocumentManager } from "./src/Services/DocumentManager";
import { CategoryManager } from "./src/Services/CategoryManager";
import { BrandManager } from "./src/Services/BrandManager";
import { WebhookManager } from "./src/Services/WebhookManager";
import { QualityControlManager } from "./src/Services/QualityControlManager";
import { ProductStatus } from "./src/Contract/ProductStatus";
import { GlobalProduct } from "./src/Model/Product/GlobalProduct";
import { Products } from "./src/Model/Product/Products";
import { Image } from "./src/Model/Product/Image";
import { Images } from "./src/Model/Product/Images";
import { BusinessUnit } from "./src/Model/Product/BusinessUnit";
import { Category } from "./src/Model/Category/Category";
import { Brand } from "./src/Model/Brand/Brand";
import { ProductData } from "./src/Model/Product/ProductData";
import { BusinessUnits } from "./src/Model/Product/BusinessUnits";
import { Categories } from "./src/Model/Category/Categories";
import { OrderManager } from "./src/Services/OrderManager";
import { ProductManagerInterface } from "./src/Services/Contract/ProductManagerInterface";
import { Product } from "./src/Model/Product/Product";
declare class SellerCenterSdk {
    private _configuration;
    protected _parameters: Parameters;
    protected _logger: Logger;
    protected _httpClient: HttpClient;
    private brandsCache;
    private feedsCache;
    private categoryCache;
    private documentCache;
    private productCache;
    private globalProductCache;
    private webhookCache;
    private qualityControlCache;
    private orderCache;
    constructor(_configuration: Configuration);
    get config(): Configuration;
    documents(): DocumentManager;
    brands(): BrandManager;
    categories(): CategoryManager;
    feeds(): FeedManager;
    globalProducts(): ProductManagerInterface;
    products(): ProductManagerInterface;
    webhook(): WebhookManager;
    qualityControl(): QualityControlManager;
    orders(): OrderManager;
}
export { SellerCenterSdk, Configuration, ProductStatus, GlobalProduct, Products, Product, Image, Images, Category, Brand, ProductData, BusinessUnit, BusinessUnits, Categories, };
